package com.eme.ims.codec;import org.apache.mina.core.buffer.IoBuffer;import org.apache.mina.core.session.IoSession;import org.apache.mina.filter.codec.CumulativeProtocolDecoder;import org.apache.mina.filter.codec.ProtocolDecoderOutput;import com.eme.ims.utils.PropertyConfig;public class MessageDecoder  extends CumulativeProtocolDecoder{	private PropertyConfig config;			public MessageDecoder(PropertyConfig config) {		this.config = config;	}		private MessageManager messageManager = MessageManager.INSTANCE;		@Override	protected boolean doDecode(IoSession session, IoBuffer in,			ProtocolDecoderOutput out) throws Exception {		System.out.println("begin to decode....");				boolean result = false;				if (in.remaining() >0) {			in.mark();			int capacity = in.getInt();			if (capacity-4==in.remaining()) {				System.out.println("has enough data to decode.["+capacity+"]");				Message message = this.messageManager.fromStream(in, capacity, config);				result = true;				out.write(message);			} else {				in.reset() ;				System.out.println("...."+capacity+"..."+in.remaining());			}		}		return result;	}}